# 2. Train a CNN Classifier

# Build the CNN model
cnn_model = Sequential([
    Conv2D(32, (3, 3), activation="relu", input_shape=(128, 128, 3)),
    MaxPooling2D((2, 2)),
    Conv2D(64, (3, 3), activation="relu"),
    MaxPooling2D((2, 2)),
    Conv2D(128, (3, 3), activation="relu"),
    MaxPooling2D((2, 2)),
    Flatten(),
    Dense(128, activation="relu"),
    Dropout(0.5),
    Dense(1, activation="sigmoid"),  # Binary classification
])

cnn_model.compile(optimizer="adam", loss="binary_crossentropy", metrics=["accuracy"])

# Train the CNN model
early_stop = EarlyStopping(monitor="val_loss", patience=5, restore_best_weights=True)
cnn_model.fit(train_data, validation_data=val_data, epochs=20, callbacks=[early_stop])

# Save the trained model
cnn_model.save("cnn_real_vs_ai.h5")
