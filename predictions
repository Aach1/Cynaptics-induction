# 4. Predict on Test Data

# Load the test data
def load_test_data(test_dir, img_size):
    test_images = []
    test_ids = []
    for img_name in os.listdir(test_dir):
        img_path = os.path.join(test_dir, img_name)
        img = load_img(img_path, target_size=img_size)
        img_array = img_to_array(img) / 255.0
        test_images.append(img_array)
        test_ids.append(img_name)
    return np.array(test_images), test_ids

test_images, test_ids = load_test_data(test_dir, img_size)

# Predict probabilities using the CNN model
cnn_model = tf.keras.models.load_model("cnn_real_vs_ai.h5")
predictions = cnn_model.predict(test_images)
probabilities = predictions.flatten()

# Generate submission file
submission = pd.DataFrame({
    "Id": test_ids,
    "Label": ["AI" if prob > 0.5 else "Real" for prob in probabilities]
})
submission.to_csv(output_csv, index=False)
print(f"Submission saved to {output_csv}")
